# values-dev.yaml
global:
  environment: dev

deployment:
  replicaCount: 1

image:
  tag: "latest"

service:
  type: ClusterIP

resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

externalSecrets:
  database:
    remoteKey: myapp/database

env:
  static:
    NODE_ENV: development
    LOG_LEVEL: debug

---
# values-staging.yaml
global:
  environment: staging

deployment:
  replicaCount: 2

image:
  tag: "staging-latest"

service:
  type: ClusterIP

resources:
  limits:
    cpu: 300m
    memory: 384Mi
  requests:
    cpu: 150m
    memory: 192Mi

externalSecrets:
  database:
    remoteKey: myapp-staging/database

env:
  static:
    NODE_ENV: staging
    LOG_LEVEL: info

---
# values-prod.yaml
global:
  environment: production

deployment:
  replicaCount: 3

image:
  tag: "v1.0.0"

service:
  type: LoadBalancer

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70

externalSecrets:
  database:
    remoteKey: myapp-prod/database

env:
  static:
    NODE_ENV: production
    LOG_LEVEL: warn

healthChecks:
  enabled: true
  livenessProbe:
    httpGet:
      path: /health
      port: 80
    initialDelaySeconds: 60
    periodSeconds: 30
  readinessProbe:
    httpGet:
      path: /ready
      port: 80
    initialDelaySeconds: 10
    periodSeconds: 10
