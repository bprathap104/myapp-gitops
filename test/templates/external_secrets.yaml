{{- if .Values.externalSecrets.enabled }}
{{- if .Values.externalSecrets.database.enabled }}
---
# Database credentials External Secret
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Values.externalSecrets.database.secretName }}
  namespace: {{ include "myapp.namespace" . }}
  labels:
    {{- include "myapp.labels" . | nindent 4 }}
spec:
  refreshInterval: {{ .Values.externalSecrets.database.refreshInterval | default .Values.externalSecrets.refreshInterval }}
  secretStoreRef:
    name: {{ .Values.externalSecrets.secretStores.awsSecretsManager.name }}
    kind: {{ .Values.externalSecrets.secretStores.awsSecretsManager.kind }}
  target:
    name: {{ .Values.externalSecrets.database.secretName }}
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        DB_USERNAME: "{{ `{{ .username }}` }}"
        DB_PASSWORD: "{{ `{{ .password }}` }}"
        DB_HOST: "{{ `{{ .host }}` }}"
        DB_PORT: "{{ `{{ .port }}` }}"
        DATABASE_URL: "postgresql://{{ `{{ .username }}:{{ .password }}@{{ .host }}:{{ .port }}/{{ .database }}` }}"
  data:
  - secretKey: username
    remoteRef:
      key: {{ .Values.externalSecrets.database.remoteKey }}
      property: username
  - secretKey: password
    remoteRef:
      key: {{ .Values.externalSecrets.database.remoteKey }}
      property: password
  - secretKey: host
    remoteRef:
      key: {{ .Values.externalSecrets.database.remoteKey }}
      property: host
  - secretKey: port
    remoteRef:
      key: {{ .Values.externalSecrets.database.remoteKey }}
      property: port
  - secretKey: database
    remoteRef:
      key: {{ .Values.externalSecrets.database.remoteKey }}
      property: database
{{- end }}

{{- if .Values.externalSecrets.apiKeys.enabled }}
---
# API Keys External Secret
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Values.externalSecrets.apiKeys.secretName }}
  namespace: {{ include "myapp.namespace" . }}
  labels:
    {{- include "myapp.labels" . | nindent 4 }}
spec:
  refreshInterval: {{ .Values.externalSecrets.apiKeys.refreshInterval | default .Values.externalSecrets.refreshInterval }}
  secretStoreRef:
    name: {{ .Values.externalSecrets.secretStores.awsParameterStore.name }}
    kind: {{ .Values.externalSecrets.secretStores.awsParameterStore.kind }}
  target:
    name: {{ .Values.externalSecrets.apiKeys.secretName }}
    creationPolicy: Owner
  data:
  {{- range $keyName, $keyPath := .Values.externalSecrets.apiKeys.keys }}
  - secretKey: {{ $keyName | upper }}_API_KEY
    remoteRef:
      key: {{ $keyPath }}
  {{- end }}
{{- end }}
{{- end }}